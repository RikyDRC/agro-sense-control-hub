
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://rzgcrxrsbzntihkjamsy.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ6Z2NyeHJzYnpudGloa2phbXN5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ3NjA4ODIsImV4cCI6MjA2MDMzNjg4Mn0.d7fqJ8c0sKb1mwlr4jtdL2SCN8BAhF8RaKhOaFCZAZQ";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    storageKey: 'agrosense-auth-token',
    flowType: 'pkce',
    detectSessionInUrl: true,
  }
});

/**
 * Helper function to create and store a new user
 */
export const createUser = async (email: string, password: string, metadata: any = {}) => {
  const { data, error } = await supabase.auth.signUp({
    email,
    password,
    options: {
      data: metadata,
      emailRedirectTo: window.location.origin
    }
  });
  
  if (error) throw error;
  return data;
};

/**
 * Helper function to sign in a user
 */
export const signIn = async (email: string, password: string) => {
  const { data, error } = await supabase.auth.signInWithPassword({
    email,
    password
  });
  
  if (error) throw error;
  return data;
};

/**
 * Helper function to sign out a user
 */
export const signOut = async () => {
  const { error } = await supabase.auth.signOut();
  if (error) throw error;
};

/**
 * Helper function to update user metadata
 */
export const updateUserMetadata = async (metadata: Record<string, any>) => {
  const { data, error } = await supabase.auth.updateUser({
    data: metadata
  });
  
  if (error) throw error;
  return data;
};
